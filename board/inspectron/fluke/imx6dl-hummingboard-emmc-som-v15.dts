/*
 * Copyright (C) 2014 Rabeeh Khoury (rabeeh@solid-run.com)
 * Based on dt work by Russell King
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License
 *     version 2 as published by the Free Software Foundation.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */
/dts-v1/;

#include "imx6dl.dtsi"
#include "imx6qdl-sr-som.dtsi"
#include "imx6qdl-sr-som-ti.dtsi"
#include "imx6qdl-sr-som-emmc.dtsi"
#include "imx6qdl-hummingboard.dtsi"

/ {
	model = "SolidRun HummingBoard Solo/DualLite (1.5som+emmc)";
	compatible = "solidrun,hummingboard/dl", "fsl,imx6dl";

    // enable backlight with default brightness
    backlight:backlight {
            label = "INSP_backlight";
            compatible = "pwm-backlight";
            status = "okay";
            pwms = <&pwm4 0 5000000>;
            brightness-levels = <0 4 8 16 32 64 128 255>;
            default-brightness-level = <6>;
            power-supply = <&reg_3p3v>;
            post-pwm-on-delay-ms = <10>;
            pwm-off-delay-ms = <10>;
    };

    regulators {
        compatible = "simple-bus";
        #address-cells = <1>;
        #size-cells = <0>;

        reg_3p3v: regulator@1 {
            compatible = "regulator-fixed";
            reg = <1>;
            regulator-name = "3P3V";
            regulator-min-microvolt = <3300000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };
    };
};

&mipi_dsi {
    label = "INSP_mipi_dsi";
    status = "okay";

    ports {
        port@1 {
            reg = <1>;
            dsi_out: endpoint {
                remote-endpoint = <&panel_in>;
            };
        };
    };

    panel@0 {
        compatible = "hummingboard,hsd070bww5", "ilitek,ili9881c";
        reg = <0>;
        power-supply = <&reg_3p3v>;
        //reset-gpios = <&r_pio 0 5 GPIO_ACTIVE_LOW>; /* PL05 */
        backlight = <&backlight>;
        panel-width-mm = <152>;
        panel-height-mm = <100>;
        dsi-lanes = <2>;
        video-mode = <2>;
        ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
                reg = <0>;
                panel_in: endpoint {
                    remote-endpoint = <&dsi_out>;
                };
            };
        };
    };
};

&hdmi {
    label = "INSP_hdmi";
    status = "disabled";
};


&pwm3 {
    label = "INSP_pwm3";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_pwm3>;
    status = "okay";
};

&pwm4 {
    label = "INSP_pwm4";
    #pwm-cells = <2>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_pwm4>;
    status = "okay";
};

&i2c1 {
    label = "INSP_i2c1";
    status = "okay";

    axp2585@34 {
        //interrupt-parent = <&gpio0>;
        //interrupts = <26 2>;
        status = "okay";
        device_type = "pmu0";
        compatible = "axp2585";
        reg = <0x34>;
        //reg = <0x68>;
        pmu_id = <0x9>;
        pmu_vbusen_func = <0x0>;
        pmu_reset = <0x0>;
        pmu_irq_wakeup = <0x1>;
        pmu_hot_shutdown = <0x1>;
        pmu_inshort = <0x1>;
        
        powerkey@0 {
            status = "okay";
            device_type = "powerkey0";
            compatible = "axp2585-powerkey";
        };

        charger@0 {
            status = "okay";
            device_type = "charger0";
            compatible = "axp2585-charger";
            pmu_chg_ic_temp = <0x0>;
            pmu_battery_rdc = <0x64>;
            pmu_battery_cap = <0x1068>;
            pmu_runtime_chgcur = <0x1c2>;
            pmu_suspend_chgcur = <0x5dc>;
            pmu_shutdown_chgcur = <0x5dc>;
            pmu_init_chgvol = <0x1068>;
            pmu_on_ctl = <0x9>;
            pmu_boost_en = <0x1>;
            pmu_boost_cur_limit = <0x5dc>;
            pmu_boost_vol_limit = <0x1406>;
            pmu_boost_vol_hold = <0xa28>;
            pmu_ac_vol = <0xfa0>;
            pmu_ac_cur = <0xbb8>;
            pmu_usbpc_vol = <0x1130>;
            pmu_usbpc_cur = <0x1f4>;
            pmu_battery_warning_level1 = <0xf>;
            pmu_battery_warning_level2 = <0x0>;
            pmu_chgled_func = <0x0>;
            pmu_chgled_type = <0x0>;
            power_start = <0x0>;
            pmu_ocv_en = <0x1>;
            pmu_cou_en = <0x1>;
            pmu_update_min_time = <0x1e>;
            pmu_bat_para1 = <0x0>;
            pmu_bat_para2 = <0x0>;
            pmu_bat_para3 = <0x0>;
            pmu_bat_para4 = <0x0>;
            pmu_bat_para5 = <0x0>;
            pmu_bat_para6 = <0x0>;
            pmu_bat_para7 = <0x0>;
            pmu_bat_para8 = <0x0>;
            pmu_bat_para9 = <0x5>;
            pmu_bat_para10 = <0x8>;
            pmu_bat_para11 = <0x9>;
            pmu_bat_para12 = <0xa>;
            pmu_bat_para13 = <0xd>;
            pmu_bat_para14 = <0x10>;
            pmu_bat_para15 = <0x14>;
            pmu_bat_para16 = <0x21>;
            pmu_bat_para17 = <0x29>;
            pmu_bat_para18 = <0x2e>;
            pmu_bat_para19 = <0x32>;
            pmu_bat_para20 = <0x35>;
            pmu_bat_para21 = <0x39>;
            pmu_bat_para22 = <0x3d>;
            pmu_bat_para23 = <0x43>;
            pmu_bat_para24 = <0x49>;
            pmu_bat_para25 = <0x4e>;
            pmu_bat_para26 = <0x54>;
            pmu_bat_para27 = <0x58>;
            pmu_bat_para28 = <0x5c>;
            pmu_bat_para29 = <0x5d>;
            pmu_bat_para30 = <0x5e>;
            pmu_bat_para31 = <0x5f>;
            pmu_bat_para32 = <0x64>;
            pmu_bat_temp_enable = <0x0>;
            pmu_bat_charge_ltf = <0x8d5>;
            pmu_bat_charge_htf = <0x184>;
            pmu_bat_shutdown_ltf = <0xc80>;
            pmu_bat_shutdown_htf = <0xed>;
            pmu_bat_temp_para1 = <0x1d2a>;
            pmu_bat_temp_para2 = <0x1180>;
            pmu_bat_temp_para3 = <0xdbe>;
            pmu_bat_temp_para4 = <0xae2>;
            pmu_bat_temp_para5 = <0x8af>;
            pmu_bat_temp_para6 = <0x6fc>;
            pmu_bat_temp_para7 = <0x5a8>;
            pmu_bat_temp_para8 = <0x3c9>;
            pmu_bat_temp_para9 = <0x298>;
            pmu_bat_temp_para10 = <0x1d2>;
            pmu_bat_temp_para11 = <0x189>;
            pmu_bat_temp_para12 = <0x14d>;
            pmu_bat_temp_para13 = <0x11b>;
            pmu_bat_temp_para14 = <0xf2>;
            pmu_bat_temp_para15 = <0xb3>;
            pmu_bat_temp_para16 = <0x86>;
        }; // ~charger
    }; // ~axp
};

&i2c2 {
    label = "INSP_i2c2";
    status = "okay";
};

&i2c3 {
    label = "INSP_i2c3";
    status = "okay";
    clock-frequency = <100000>;
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_insp_i2c2>;
};

&i2c4 {
    label = "INSP_i2c4";
    status = "okay";
};

&iomuxc {
    itb200 {
        pinctrl_csi1_parallel: csigrp-1 {
            fsl,pins = <
                /* DI1_DISP_CLK */
                MX6QDL_PAD_EIM_A16__IPU1_CSI1_PIXCLK    0x1b0b1
                /* DI1_PIN03 */
                MX6QDL_PAD_EIM_DA12__IPU1_CSI1_VSYNC    0x1b0b1
                /* DI1_PIN02 */
                MX6QDL_PAD_EIM_DA11__IPU1_CSI1_HSYNC    0x1b0b1
                /* CSI1_DATA12-19 */
                MX6QDL_PAD_EIM_A17__IPU1_CSI1_DATA12    0x1b0b1
                MX6QDL_PAD_EIM_A18__IPU1_CSI1_DATA13    0x1b0b1
                MX6QDL_PAD_EIM_A19__IPU1_CSI1_DATA14    0x1b0b1
                MX6QDL_PAD_EIM_A20__IPU1_CSI1_DATA15    0x1b0b1
                MX6QDL_PAD_EIM_A21__IPU1_CSI1_DATA16    0x1b0b1
                MX6QDL_PAD_EIM_A22__IPU1_CSI1_DATA17    0x1b0b1
                MX6QDL_PAD_EIM_A23__IPU1_CSI1_DATA18    0x1b0b1
                MX6QDL_PAD_EIM_A24__IPU1_CSI1_DATA19    0x1b0b1
            >;
        }; //~csigrp-1

        pinctrl_pwm4: pwm4grp {
            fsl,pins = <
                MX6QDL_PAD_SD4_DAT2__PWM4_OUT 0x1b0b1
            >;
        };

        pinctrl_pwm3: pwm3grp {
            fsl,pins = <
                MX6QDL_PAD_SD4_DAT1__PWM3_OUT 0x1b0b1
            >;
        };

        usb_sw_ctrl: usbswctrl {
            fsl,pins = <
                MX6QDL_PAD_GPIO_17__GPIO7_IO12 0x1b0b1
            >;
        };

        pinctrl_insp_i2c2: insp-i2c2 {
            fsl,pins = <
                MX6QDL_PAD_KEY_COL3__I2C2_SCL 0x4001b8b1
                MX6QDL_PAD_KEY_ROW3__I2C2_SDA 0x4001b8b1
            >;
        };

        pinctrl_insp_vbus_en: insp-vbus-en {
            fsl,pins = <MX6QDL_PAD_GPIO_0__GPIO1_IO00 0x1b0b0>;
        };

    }; //~itb200
}; //~iomuxc

&spdif {
    status = "disabled";
    /delete-property/ pinctrl-0;
};


&v_usb2 {
    /delete-property/ pinctrl-0;
};

/delete-node/ &pinctrl_hummingboard_spdif;
/delete-node/ &pinctrl_hummingboard_usbh1_vbus;

// set the usb-otg to pull up
&pinctrl_hummingboard_usbotg_id {
    label = "INSP_USB_OTG_ID";
    fsl,pins = <MX6QDL_PAD_GPIO_1__GPIO1_IO01 0x0001B0B0>;
};

&snvs_poweroff {
    label ="INSP_PWR_OFF";
    status = "okay";
};
